---
import { Icon } from 'astro-icon/components';
import { getHomePermalink } from '~/utils/permalinks';
import Logo from '~/components/Logo.astro';

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface Links {
  title?: string;
  links: Array<Link>;
}

export interface Props {
  links: Array<Links>;
  socialLinks: Array<Link>;
  theme?: string;
}

const { socialLinks = [], theme = 'light' } = Astro.props;
---
<footer class:list={[{ dark: theme === 'dark' }, 'relative border-t-2 border-gray-200 dark:border-slate-800 not-prose']}>
  <div class="dark:bg-dark absolute inset-0 pointer-events-none" aria-hidden="true"></div>

  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 dark:text-slate-300">
    <div class="md:flex md:items-center md:justify-between py-6 md:py-8">
      <div class="col-span-12 lg:col-span-4">
        <div class="mb-2 text-center md:text-left">
          <a class="inline-block font-bold text-xl" href={getHomePermalink()}><Logo /></a>
        </div>
      </div>
      {
        socialLinks?.length ? (
          <ul class="flex justify-center mb-4 md:order-1 md:justify-start md:ml-4 md:mb-0 rtl:ml-0 rtl:-mr-2 rtl:md:ml-0 rtl:md:mr-4">
            {socialLinks.map(({ ariaLabel, href, text, icon }) => (
              <li>
                <a
                  class="text-muted dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5 inline-flex items-center"
                  aria-label={ariaLabel}
                  href={href}
                >
                  {icon && <Icon name={icon} class="w-6 h-6" />}
                  <Fragment set:html={text} />
                </a>
              </li>
            ))}
          </ul>
        ) : null
      }
    </div>
  </div>
</footer>